/** \page cxxtools_cxxlog.cpp cxxlog.cpp

@htmlinclude sidebar.html

\htmlonly
    <div id=content>

<h2>Example: cxxlog.cpp application</h2>

<!-- Generator: GNU source-highlight 3.1
by Lorenzo Bettini
http://www.lorenzobettini.it
http://www.gnu.org/software/src-highlite -->
<pre><tt>
<b><font color="#000080">#include</font></b> <font color="#FF0000">&lt;iostream&gt;</font>
<b><font color="#000080">#include</font></b> <font color="#FF0000">&lt;algorithm&gt;</font>
<b><font color="#000080">#include</font></b> <font color="#FF0000">&lt;iterator&gt;</font>
<b><font color="#000080">#include</font></b> <font color="#FF0000">&lt;cxxtools/arg.h&gt;</font>
<b><font color="#000080">#include</font></b> <font color="#FF0000">&lt;cxxtools/log.h&gt;</font>
<b><font color="#000080">#include</font></b> <font color="#FF0000">&lt;cxxtools/loginit.h&gt;</font>


<i><font color="#9A1900">// Normally the category parameter is a constant.</font></i>
<i><font color="#9A1900">//</font></i>
<i><font color="#9A1900">// log_define defines a function, which fetches a logger class using that</font></i>
<i><font color="#9A1900">// constant. Since this is done only the first time something is logged, it is</font></i>
<i><font color="#9A1900">// important to set the category before the first logging output statement.</font></i>
<i><font color="#9A1900">//</font></i>
std<font color="#990000">::</font><font color="#008080">string</font> category<font color="#990000">;</font>
<b><font color="#000000">log_define</font></b><font color="#990000">(</font>category<font color="#990000">)</font>

<font color="#009900">int</font> <b><font color="#000000">main</font></b><font color="#990000">(</font><font color="#009900">int</font> argc<font color="#990000">,</font> <font color="#009900">char</font><font color="#990000">*</font> argv<font color="#990000">[])</font>
<font color="#FF0000">{</font>
  <b><font color="#0000FF">try</font></b>
  <font color="#FF0000">{</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;bool&gt;</font> <b><font color="#000000">fatal</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">'f'</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;bool&gt;</font> <b><font color="#000000">fatal_l</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">"--fatal"</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;bool&gt;</font> <b><font color="#000000">error</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">'e'</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;bool&gt;</font> <b><font color="#000000">error_l</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">"--error"</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;bool&gt;</font> <b><font color="#000000">warn</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">'w'</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;bool&gt;</font> <b><font color="#000000">warn_l</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">"--warn"</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;bool&gt;</font> <b><font color="#000000">info</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">'i'</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;bool&gt;</font> <b><font color="#000000">info_l</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">"--info"</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;bool&gt;</font> <b><font color="#000000">debug</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">'d'</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;bool&gt;</font> <b><font color="#000000">debug_l</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">"--debug"</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;std::string&gt;</font> <b><font color="#000000">properties</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">'p'</font><font color="#990000">,</font> <font color="#FF0000">"log.properties"</font><font color="#990000">);</font>
    cxxtools<font color="#990000">::</font><font color="#008080">Arg&lt;std::string&gt;</font> <b><font color="#000000">properties_l</font></b><font color="#990000">(</font>argc<font color="#990000">,</font> argv<font color="#990000">,</font> <font color="#FF0000">"--properties"</font><font color="#990000">,</font> properties<font color="#990000">);</font>

    <b><font color="#0000FF">if</font></b> <font color="#990000">(</font>argc <font color="#990000">&lt;=</font> <font color="#993399">2</font><font color="#990000">)</font>
    <font color="#FF0000">{</font>
      std<font color="#990000">::</font>cerr <font color="#990000">&lt;&lt;</font> <font color="#FF0000">"usage: "</font> <font color="#990000">&lt;&lt;</font> argv<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">&lt;&lt;</font> <font color="#FF0000">" options category message</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>
                   <font color="#FF0000">"</font><font color="#CC33CC">\t</font><font color="#FF0000">options:  -f|--fatal</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>
                   <font color="#FF0000">"</font><font color="#CC33CC">\t</font><font color="#FF0000">          -e|--error</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>
                   <font color="#FF0000">"</font><font color="#CC33CC">\t</font><font color="#FF0000">          -w|--warn</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>
                   <font color="#FF0000">"</font><font color="#CC33CC">\t</font><font color="#FF0000">          -i|--info</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>
                   <font color="#FF0000">"</font><font color="#CC33CC">\t</font><font color="#FF0000">          -d|--debug</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>
                   <font color="#FF0000">"</font><font color="#CC33CC">\t</font><font color="#FF0000">          -p|--properties filename"</font> <font color="#990000">&lt;&lt;</font> std<font color="#990000">::</font>endl<font color="#990000">;</font>
      <b><font color="#0000FF">return</font></b> <font color="#990000">-</font><font color="#993399">1</font><font color="#990000">;</font>
    <font color="#FF0000">}</font>

    category <font color="#990000">=</font> argv<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>

    <b><font color="#000000">log_init</font></b><font color="#990000">(</font>properties_l<font color="#990000">.</font><b><font color="#000000">getValue</font></b><font color="#990000">());</font>

    std<font color="#990000">::</font><font color="#008080">ostringstream</font> msg<font color="#990000">;</font>
    std<font color="#990000">::</font><b><font color="#000000">copy</font></b><font color="#990000">(</font>argv <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">,</font>
              argv <font color="#990000">+</font> argc<font color="#990000">,</font>
              std<font color="#990000">::</font>ostream_iterator<font color="#990000">&lt;</font><font color="#009900">char</font><font color="#990000">*&gt;(</font>msg<font color="#990000">,</font> <font color="#FF0000">" "</font><font color="#990000">));</font>

    <b><font color="#0000FF">if</font></b> <font color="#990000">(</font>fatal <font color="#990000">||</font> fatal_l<font color="#990000">)</font>
      <b><font color="#000000">log_fatal</font></b><font color="#990000">(</font>msg<font color="#990000">.</font><b><font color="#000000">str</font></b><font color="#990000">());</font>

    <b><font color="#0000FF">if</font></b> <font color="#990000">(</font>error <font color="#990000">||</font> error_l<font color="#990000">)</font>
      <b><font color="#000000">log_error</font></b><font color="#990000">(</font>msg<font color="#990000">.</font><b><font color="#000000">str</font></b><font color="#990000">());</font>

    <b><font color="#0000FF">if</font></b> <font color="#990000">(</font>warn <font color="#990000">||</font> warn_l<font color="#990000">)</font>
      <b><font color="#000000">log_warn</font></b><font color="#990000">(</font>msg<font color="#990000">.</font><b><font color="#000000">str</font></b><font color="#990000">());</font>

    <b><font color="#0000FF">if</font></b> <font color="#990000">(</font>info <font color="#990000">||</font> info_l<font color="#990000">)</font>
      <b><font color="#000000">log_info</font></b><font color="#990000">(</font>msg<font color="#990000">.</font><b><font color="#000000">str</font></b><font color="#990000">());</font>

    <b><font color="#0000FF">if</font></b> <font color="#990000">(</font>debug <font color="#990000">||</font> debug_l<font color="#990000">)</font>
      <b><font color="#000000">log_debug</font></b><font color="#990000">(</font>msg<font color="#990000">.</font><b><font color="#000000">str</font></b><font color="#990000">());</font>
  <font color="#FF0000">}</font>
  <b><font color="#0000FF">catch</font></b> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> std<font color="#990000">::</font>exception<font color="#990000">&amp;</font> e<font color="#990000">)</font>
  <font color="#FF0000">{</font>
    std<font color="#990000">::</font>cerr <font color="#990000">&lt;&lt;</font> e<font color="#990000">.</font><b><font color="#000000">what</font></b><font color="#990000">()</font> <font color="#990000">&lt;&lt;</font> std<font color="#990000">::</font>endl<font color="#990000">;</font>
  <font color="#FF0000">}</font>
<font color="#FF0000">}</font>

</tt></pre>


</div>

\endhtmlonly

*/
