AC_INIT(tntnet, 1.5.3.4.20070503-1, [Tommi Maekitalo <tommi@tntnet.org>])
AM_INIT_AUTOMAKE

abi_current=5
abi_revision=1
abi_age=0
sonumber=${abi_current}:${abi_revision}:${abi_age}
AC_SUBST(sonumber)

unset CDPATH

AC_CONFIG_HEADERS([framework/common/config.h])
AC_CONFIG_SRCDIR([framework/runtime/tntnet.cpp])

AC_SEARCH_LIBS(gethostbyname, nsl socket resolv)
AC_SEARCH_LIBS(inet_ntop, nsl socket resolv)
AC_CHECK_FUNCS(inet_ntop)

AC_PROG_CXX
AC_DISABLE_STATIC
AC_PROG_LIBTOOL

AC_LANG(C++)

#
# Cxxtools
#
AC_PATH_PROGS(CXXTOOLS_CONFIG, cxxtools-config)
if ! test -x "$CXXTOOLS_CONFIG"; then
  AC_MSG_ERROR([cxxtools configuration script was not found])
fi

CXXTOOLS_CXXFLAGS=`$CXXTOOLS_CONFIG --cxxflags`
CXXTOOLS_LDFLAGS=`$CXXTOOLS_CONFIG --libs`

AC_MSG_CHECKING([for cxxtools usability])
AC_COMPILE_IFELSE(
  [#include <cxxtools/net.h>
   #include <cxxtools/pipe.h>
   void t() { cxxtools::net::Socket s;
              struct sockaddr_storage t = s.getSockAddr(); }
  ],
  AC_MSG_RESULT(yes),
  [
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(please check your cxxtools-installation - maybe you need an upgrade)
  ]
  )

AC_SUBST(CXXTOOLS_CONFIG)
AC_SUBST(CXXTOOLS_CXXFLAGS)
AC_SUBST(CXXTOOLS_LDFLAGS)

AC_CHECK_HEADER([cxxtools/net.h], , AC_MSG_ERROR([cxtools not found]))
AC_CHECK_HEADER([zlib.h], , AC_MSG_ERROR([zlib not found]))

AC_ARG_WITH([epoll],
  AS_HELP_STRING([--with-epoll=yes|no|probe], [use epoll]),
  [epoll_option=$withval],
  [epoll_option=probe])

case "$epoll_option" in
  yes)
      AC_DEFINE(WITH_EPOLL, [], [Define if epoll is supported])
      ;;
  no)
      ;;
  probe)
      AC_TRY_RUN([
        #include <sys/epoll.h>
        int main() { return epoll_create(10) <= 0; }
        ],
        [AC_DEFINE(WITH_EPOLL, [], [Define if epoll is supported])])
        ;;
    *)
      AC_MSG_ERROR([unknown epoll-value $epoll_option])
      ;;
esac

AC_ARG_WITH([sendfile],
  AS_HELP_STRING([--with-sendfile=yes|no|probe], [use sendfile]),
  [sendfile_option=$withval],
  [sendfile_option=probe])

case "$sendfile_option" in
  yes)
      AC_DEFINE(WITH_SENDFILE, [], [Define if sendfile is supported])
      ;;
  no)
      ;;
  probe)
      AC_CHECK_FUNCS([sendfile])
      ;;
    *)
      AC_MSG_ERROR([unknown sendfile-value $sendfile_option])
      ;;
esac

#
# SSL
#
AC_ARG_WITH([ssl],
  AS_HELP_STRING([--with-ssl=gnutls|openssl|no], [build with SSL support (default is gnutls)]),
  [ssl_option=$withval],
  [ssl_option=gnutls])

case "$ssl_option" in
    gnutls|yes)
        AC_CHECK_HEADER([gnutls/gnutls.h], [
            AC_MSG_RESULT([building with GnuTLS support])
            AC_DEFINE(WITH_GNUTLS, [], [Define to build with gnutls])
            with_gnutls=1
          ],
          [AC_MSG_ERROR(gnutls-headers not not found)])
        ;;
    openssl)
        AC_CHECK_HEADER([openssl/ssl.h], [
            AC_MSG_RESULT([building with OpenSSL support])
            AC_DEFINE(WITH_OPENSSL, [], [Define to build with openssl])
            with_openssl=1
          ],
          [AC_MSG_ERROR(openssl-headers not not found)])
        ;;
    no)
        AC_MSG_RESULT([building without ssl support])
        ;;
    *)
        AC_MSG_ERROR([unknown ssl-value $ssl_option])
        ;;
esac

AM_CONDITIONAL(MAKE_GNUTLS, test x$with_gnutls = x1)
AM_CONDITIONAL(MAKE_OPENSSL, test x$with_openssl = x1)

#
# optional components
#
AC_ARG_WITH([tntnet],
  AS_HELP_STRING([--with-tntnet=yes|no], [build tntnet-server (default: yes)]),
  [with_tntnet=$withval],
  [with_tntnet=yes])

AM_CONDITIONAL(MAKE_TNTNET, test x$with_tntnet = xyes)

AC_ARG_WITH([cgi],
  AS_HELP_STRING([--with-cgi=yes|no], [build cgi-library (default: yes)]),
  [with_cgi=$withval],
  [with_cgi=yes])

AM_CONDITIONAL(MAKE_CGI, test x$with_cgi = xyes)

AC_ARG_WITH([sdk],
  AS_HELP_STRING([--with-sdk=yes|no], [build sdk (default: yes)]),
  [with_sdk=$withval],
  [with_sdk=yes])

AM_CONDITIONAL(MAKE_SDK, test x$with_sdk = xyes)

AC_ARG_WITH([demos],
  AS_HELP_STRING([--with-demos=yes|no], [build demos (default: same as with-sdk)]),
  [with_demos=$withval],
  [with_demos=$with_sdk])

AM_CONDITIONAL(MAKE_DEMOS, test x$with_demos = xyes)

if test x$with_sdk != xyes -a x$with_demos = xyes
then
  AC_MSG_ERROR([demos can't be built without building sdk])
fi

#
# others
#
AC_CHECK_FUNCS([setenv])

AC_COMPILE_IFELSE(
  [#include <netinet/tcp.h>
   int i = TCP_DEFER_ACCEPT;
  ],
  AC_DEFINE(HAVE_TCP_DEFER_ACCEPT, [], [defined if TCP_DEFER_ACCEPT is defined]))

AC_CONFIG_FILES([
    Makefile
    framework/common/Makefile
    framework/runtime/Makefile
    framework/defcomp/Makefile
    framework/cgi/Makefile
    sdk/tools/common/Makefile
    sdk/tools/ecppc/Makefile
    sdk/tools/ecppl/Makefile
    sdk/tools/ecppll/Makefile
    sdk/demos/Makefile
    sdk/demos/calc/Makefile
    sdk/demos/calcajax/Makefile
    sdk/demos/calcmvc/Makefile
    sdk/demos/calci18n/Makefile
    sdk/demos/chat/Makefile
    sdk/demos/comp/Makefile
    sdk/demos/config/Makefile
    sdk/demos/controls/Makefile
    sdk/demos/cookie/Makefile
    sdk/demos/hello/Makefile
    sdk/demos/savepoint/Makefile
    sdk/demos/session/Makefile
    sdk/demos/sprintf/Makefile
    sdk/demos/strings/Makefile
    sdk/demos/upload/Makefile
    doc/man/Makefile
    etc/Makefile
    tntnet-config
    ])

AC_OUTPUT

chmod +x tntnet-config
