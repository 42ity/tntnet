AC_INIT([tntnet],[1.3.0],[Tommi Maekitalo <tommi@tntnet.org>])
AM_INIT_AUTOMAKE(tntnet, 1.3.0)

abi_current=3
abi_revision=1
abi_age=0
sonumber=${abi_current}:${abi_revision}:${abi_age}
AC_SUBST(sonumber)

unset CDPATH

AC_CONFIG_HEADERS([framework/common/config.h])
AC_CONFIG_SRCDIR([framework/runtime/tntnet.cpp])

AC_PROG_CXX(g++-3.0 g++ c++ CC)
AC_PROG_LIBTOOL

AC_LANG(C++)

#
# Cxxtools
#
AC_ARG_WITH([cxxtools],
  AS_HELP_STRING([--with-cxxtools], [specify installation-path of cxxtools]),
  [ cxxtools_dir=$withval ],
  [
    for dir in /usr/local /usr; do
      if test -f "$dir/share/cxxtools/cxxtools-log-ldflags"; then
        cxxtools_dir=$dir
        break
      fi
    done
  ])
AC_CHECK_HEADER([cxxtools/tcpstream.h])
AC_CHECK_HEADER([cxxtools/log.h])

AC_CHECK_FILE(
  [$cxxtools_dir/share/cxxtools/cxxtools-cxxflags],
  [ CXXFLAGS="$CXXFLAGS `cat $cxxtools_dir/share/cxxtools/cxxtools-cxxflags`" ],
  AC_MSG_WARN("$cxxtools_dir/share/cxxtools/cxxtools-cxxflags not found") )
AC_CHECK_FILE(
  [$cxxtools_dir/share/cxxtools/cxxtools-ldflags],
  [ LDFLAGS="$LDFLAGS `cat $cxxtools_dir/share/cxxtools/cxxtools-ldflags`" ],
  AC_MSG_WARN("$LDFLAGS `cat $cxxtools_dir/share/cxxtools/cxxtools-ldflags`") )
AC_CHECK_FILE(
  [$cxxtools_dir/share/cxxtools/cxxtools-log-ldflags],
  [ LDFLAGS="$LDFLAGS `cat $cxxtools_dir/share/cxxtools/cxxtools-log-ldflags`" ],
  AC_MSG_WARN("$LDFLAGS `cat $cxxtools_dir/share/cxxtools/cxxtools-log-ldflags`") )

#
# OpenSSL
#
AC_ARG_WITH([openssl],
  AS_HELP_STRING([--with-openssl], [build with OpenSSL support]),
  [openssl_prefix=$withval],
  [
    AC_MSG_RESULT([building with OpenSSL support])
    AC_DEFINE([USE_SSL], 1, [Define to build with (Open)SSL support. (--with-openssl)])
    openssl=1

    if test -d "${openssl_prefix}/include" ; then
      INCLUDES="$INCLUDES -I${openssl_prefix}/include"
    fi
    if test -d "${openssl_prefix}/lib" ; then
      LIBDIRS="$LIBDIRS -L${openssl_prefix}/lib"
    fi
    AC_CHECK_HEADER([openssl/ssl.h])

  ])

AM_CONDITIONAL(MAKE_OPENSSL, test x$openssl == x1)

#
# others
#
AC_CHECK_HEADER([boost/regex.hpp])
AC_CHECK_FUNCS([setenv])

AC_CONFIG_FILES([
    Makefile
    framework/common/Makefile
    framework/runtime/Makefile
    framework/ecpp/Makefile
    framework/defcomp/Makefile
    sdk/tools/common/Makefile
    sdk/tools/ecppc/Makefile
    sdk/tools/ecppl/Makefile
    sdk/tools/ecppll/Makefile
    sdk/demos/calc/Makefile
    sdk/demos/hello/Makefile
    etc/Makefile
    ])

AC_OUTPUT
